window.requiredModules_equal_or_unequal = [];
window.proof_equal_or_unequal = [
 [
  "AddRelation",
  [
   2,
   "<=",
   "Ex(((@1)+(x))=(@2))"
  ],
  null,
  ""
 ],
 [
  "AddRelation",
  [
   2,
   "<",
   "Ex(((@1)+(S(x)))=(@2))"
  ],
  null,
  ""
 ],
 [
  "AddRelation",
  [
   2,
   "!<",
   "((@1)<(@2))=>(F)"
  ],
  null,
  ""
 ],
 [
  "AddRelation",
  [
   2,
   "!=",
   "((@1)=(@2))=>(F)"
  ],
  null,
  ""
 ],
 [
  "AddConnective",
  [
   2,
   "||",
   "((P)=>(F))=>(Q)"
  ],
  null,
  ""
 ],
 [
  "AddConnective",
  [
   2,
   "&&",
   "((P)=>((Q)=>(F)))=>(F)"
  ],
  null,
  ""
 ],
 [
  "Assume",
  [
   "((u)=(v))=>(F)"
  ],
  15,
  "((u)=(v))=>(F)"
 ],
 [
  "Rewrite",
  [
   15,
   "(u)!=(v)"
  ],
  16,
  "(u)!=(v)"
 ],
 [
  "DT",
  [
   15,
   16
  ],
  17,
  "(((u)=(v))=>(F))=>((u)!=(v))"
 ],
 [
  "Rewrite",
  [
   17,
   "((u)=(v))||((u)!=(v))"
  ],
  18,
  "((u)=(v))||((u)!=(v))"
 ],
 [
  "G",
  [
   18,
   "v"
  ],
  19,
  "Av(((u)=(v))||((u)!=(v)))"
 ],
 [
  "G",
  [
   19,
   "u"
  ],
  20,
  "Au(Av(((u)=(v))||((u)!=(v))))"
 ],
 [
  "SV",
  [
   20,
   "x"
  ],
  21,
  "Av(((x)=(v))||((x)!=(v)))"
 ],
 [
  "SV",
  [
   21,
   "y"
  ],
  22,
  "((x)=(y))||((x)!=(y))"
 ],
 [
  "G",
  [
   22,
   "y"
  ],
  23,
  "Ay(((x)=(y))||((x)!=(y)))"
 ],
 [
  "G",
  [
   23,
   "x"
  ],
  24,
  "Ax(Ay(((x)=(y))||((x)!=(y))))"
 ]
];