window.requiredModules_and_introduction = ["alternative_implication","explosion","and_elimination1","and_elimination2","equal_or_unequal","excluded_middle_or","or_implies","or_introduction1","logic","nonzero_is_successor","addition_commutes","addition_injective","S_functional","addition_associates","add_to_0","addition","distributivity","multiplication_associates","multiplication_commutes","multiply_to_0","multiply_unchanged","addition"];

window.proof_and_introduction = [
 [
  "AddRelation",
  [
   2,
   "<=",
   "Ex(((@1)+(x))=(@2))"
  ],
  null,
  ""
 ],
 [
  "AddRelation",
  [
   2,
   "<",
   "Ex(((@1)+(S(x)))=(@2))"
  ],
  null,
  ""
 ],
 [
  "AddRelation",
  [
   2,
   "!<",
   "((@1)<(@2))=>(F)"
  ],
  null,
  ""
 ],
 [
  "AddRelation",
  [
   2,
   "!=",
   "((@1)=(@2))=>(F)"
  ],
  null,
  ""
 ],
 [
  "AddRelation",
  [
   2,
   "|",
   "Ex(((@1)*(x))=(@2))"
  ],
  null,
  ""
 ],
 [
  "AddConnective",
  [
   2,
   "||",
   "((P)=>(F))=>(Q)"
  ],
  null,
  ""
 ],
 [
  "AddConnective",
  [
   2,
   "&&",
   "((P)=>((Q)=>(F)))=>(F)"
  ],
  null,
  ""
 ],
 [
  "Assume",
  [
   "P"
  ],
  15,
  "P"
 ],
 [
  "Assume",
  [
   "Q"
  ],
  16,
  "Q"
 ],
 [
  "Assume",
  [
   "(P)=>((Q)=>(F))"
  ],
  17,
  "(P)=>((Q)=>(F))"
 ],
 [
  "MP",
  [
   17,
   15
  ],
  18,
  "(Q)=>(F)"
 ],
 [
  "MP",
  [
   18,
   16
  ],
  19,
  "F"
 ],
 [
  "DT",
  [
   17,
   19
  ],
  20,
  "((P)=>((Q)=>(F)))=>(F)"
 ],
 [
  "Rewrite",
  [
   20,
   "(P)&&(Q)"
  ],
  21,
  "(P)&&(Q)"
 ],
 [
  "DT",
  [
   16,
   21
  ],
  22,
  "(Q)=>((P)&&(Q))"
 ],
 [
  "DT",
  [
   15,
   22
  ],
  23,
  "(P)=>((Q)=>((P)&&(Q)))"
 ]
];